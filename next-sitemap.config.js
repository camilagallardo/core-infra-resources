
/** @type {import('next-sitemap').IConfig} */
module.exports = {
    siteUrl: 'https://docs.psrestful.com',
    generateRobotsTxt: true, // (optional)
    generateIndexSitemap: false,
    additionalPaths: async (config) => [await config.transform(config, 'authentication'),
await config.transform(config, 'rate-limits'),
await config.transform(config, 'environments'),
await config.transform(config, 'why-ps-restful'),
await config.transform(config, 'standards'),
await config.transform(config, 'guides'),
await config.transform(config, 'design-decisions'),
await config.transform(config, 'promostandards-general-rollout-strategy-for-distributors'),
await config.transform(config, '/guides/purchase-order/send-po/place-sample-order'),
await config.transform(config, '/guides/purchase-order/send-po/place-blank-order'),
await config.transform(config, '/guides/purchase-order/send-po/place-configured-order'),
await config.transform(config, '/guides/order-status/how-to-get-order-status-types'),
await config.transform(config, '/guides/order-status/how-to-get-order-status-details'),
await config.transform(config, '/guides/ppc/how-to-get-all-available-charges'),
await config.transform(config, '/guides/ppc/how-to-get-all-available-locations'),
await config.transform(config, '/guides/ppc/how-to-get-fob-points'),
await config.transform(config, '/guides/ppc/how-to-get-pricing-and-configuration'),
await config.transform(config, '/guides/ppc/how-to-get-decoration-colors'),
await config.transform(config, '/guides/order-shipment-notification/how-to-get-order-shipment-notifications'),
await config.transform(config, '/guides/product-data/how-to-get-product'),
await config.transform(config, '/guides/product-data/how-to-get-all-sellable-products'),
await config.transform(config, '/guides/media-content/how-to-get-product-media-content'),
await config.transform(config, '/guides/inventory/how-to-get-inventory-levels'),
await config.transform(config, '/guides/inventory/how-to-filter-values'),
await config.transform(config, '/guides/invoice/how-to-get-invoices'),
await config.transform(config, '/standards/inventory-1.2.1'),
await config.transform(config, '/standards/order-shipment-notification-1.0.0'),
await config.transform(config, '/standards/product-data-1.0.0'),
await config.transform(config, '/standards/order-status-1.0.0'),
await config.transform(config, '/standards/purchase-order-1.0.0'),
await config.transform(config, '/standards/invoice-1.0.0'),
await config.transform(config, '/standards/overview'),
await config.transform(config, '/standards/product-data-2.0.0'),
await config.transform(config, '/standards/inventory-2.0.0'),
await config.transform(config, '/standards/order-shipment-notification-2.0.0'),
await config.transform(config, '/standards/order-status-2.0.0'),
await config.transform(config, '/standards/product-compliance-1.0.0'),
await config.transform(config, '/standards/media-content-1.1.0'),
await config.transform(config, '/standards/service-codes'),
await config.transform(config, '/standards/ppc-1.0.0')
      ],
    
  }